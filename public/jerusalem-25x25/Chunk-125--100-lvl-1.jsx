/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./maps/chunk-125--100-lvl-1.glb --transform --resolution --shadows -o ./maps/chunk-125--100-lvl-1-transformed.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/chunk-125--100-lvl-1-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Stone.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Dirt.geometry} material={materials.dirt} />
      <mesh castShadow receiveShadow geometry={nodes.Gravel.geometry} material={materials.gravel} />
      <mesh castShadow receiveShadow geometry={nodes.Double_Cobblestone_Slab.geometry} material={materials.cobblestone} />
      <mesh castShadow receiveShadow geometry={nodes.Double_Stone_Brick_Slab.geometry} material={materials.stone_bricks} />
      <mesh castShadow receiveShadow geometry={nodes.Cobblestone_Slab.geometry} material={materials.cobblestone} />
      <mesh castShadow receiveShadow geometry={nodes.Double_Stone_Slab.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Stone_Slab.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Stone_Stairs.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_1.geometry} material={materials.grass_block_top} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_2.geometry} material={materials.grass_block_side} />
      <mesh castShadow receiveShadow geometry={nodes.Oak_Log_1.geometry} material={materials.oak_log} />
      <mesh castShadow receiveShadow geometry={nodes.Oak_Log_2.geometry} material={materials.oak_log_top} />
      <mesh castShadow receiveShadow geometry={nodes.Lectern_1.geometry} material={materials.oak_planks} />
      <mesh castShadow receiveShadow geometry={nodes.Lectern_2.geometry} material={materials.lectern_top} />
      <mesh castShadow receiveShadow geometry={nodes.Lectern_3.geometry} material={materials.lectern_sides} />
      <mesh castShadow receiveShadow geometry={nodes.Lectern_4.geometry} material={materials.lectern_base} />
      <mesh castShadow receiveShadow geometry={nodes.Lectern_5.geometry} material={materials.lectern_front} />
    </group>
  )
}

useGLTF.preload('/chunk-125--100-lvl-1-transformed.glb')
