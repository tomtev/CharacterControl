/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./maps/chunk-150-150-lvl-1.glb --transform --resolution --shadows -o ./maps/chunk-150-150-lvl-1-transformed.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/chunk-150-150-lvl-1-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Stone.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Granite.geometry} material={materials.granite} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block.geometry} material={materials.grass_block_top} />
      <mesh castShadow receiveShadow geometry={nodes.Dirt.geometry} material={materials.dirt} />
      <mesh castShadow receiveShadow geometry={nodes.Cobblestone.geometry} material={materials.cobblestone} />
      <mesh castShadow receiveShadow geometry={nodes.Sand.geometry} material={materials.sand} />
      <mesh castShadow receiveShadow geometry={nodes.Block_of_Lapis_Lazuli.geometry} material={materials.lapis_block} />
      <mesh castShadow receiveShadow geometry={nodes.Grass.geometry} material={materials.grass} />
      <mesh castShadow receiveShadow geometry={nodes.Piston.geometry} material={materials.piston_side} />
      <mesh castShadow receiveShadow geometry={nodes.Dandelion.geometry} material={materials.dandelion} />
      <mesh castShadow receiveShadow geometry={nodes.Poppy.geometry} material={materials.poppy} />
      <mesh castShadow receiveShadow geometry={nodes.Azure_Bluet.geometry} material={materials.azure_bluet} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_Wall.geometry} material={materials.sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Acacia_Leaves.geometry} material={materials.acacia_leaves} />
      <mesh castShadow receiveShadow geometry={nodes.End_Stone_Bricks.geometry} material={materials.end_stone_bricks} />
      <mesh castShadow receiveShadow geometry={nodes.Cyan_Wall_Banner.geometry} material={materials.cyan_concrete} />
      <mesh castShadow receiveShadow geometry={nodes.Smooth_Sandstone.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Polished_Diorite_Slab.geometry} material={materials.polished_diorite} />
      <mesh castShadow receiveShadow geometry={nodes.Smooth_Sandstone_Stairs.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Stationary_Water_1.geometry} material={materials.water_still} />
      <mesh castShadow receiveShadow geometry={nodes.Stationary_Water_2.geometry} material={materials.water_flow} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_2.geometry} material={materials.sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_3.geometry} material={materials.sandstone_bottom} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_2.geometry} material={materials.cut_sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_Slab_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_Slab_2.geometry} material={materials.sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Oak_Sign__0_1.geometry} material={materials.oak_planks} />
      <mesh castShadow receiveShadow geometry={nodes.Oak_Sign__0_2.geometry} material={materials.oak_log} />
      <mesh castShadow receiveShadow geometry={nodes.Oak_Sign__0_3.geometry} material={materials.oak_log_top} />
      <mesh castShadow receiveShadow geometry={nodes.Potted_Azure_Bluet_1.geometry} material={materials.dirt} />
      <mesh castShadow receiveShadow geometry={nodes.Potted_Azure_Bluet_2.geometry} material={materials.flower_pot} />
      <mesh castShadow receiveShadow geometry={nodes.Acacia_Log_1.geometry} material={materials.acacia_log} />
      <mesh castShadow receiveShadow geometry={nodes.Acacia_Log_2.geometry} material={materials.acacia_log_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_2.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_3.geometry} material={materials.cut_sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_1_1.geometry} material={materials.cut_sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_1_2.geometry} material={materials.sandstone_top} />
    </group>
  )
}

useGLTF.preload('/chunk-150-150-lvl-1-transformed.glb')
