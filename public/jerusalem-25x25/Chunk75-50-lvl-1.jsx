/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./maps/chunk75-50-lvl-1.glb --transform --resolution --shadows -o ./maps/chunk75-50-lvl-1.glb-transformed.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/chunk75-50-lvl-1-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Dirt.geometry} material={materials.dirt} />
      <mesh castShadow receiveShadow geometry={nodes.Sand.geometry} material={materials.sand} />
      <mesh castShadow receiveShadow geometry={nodes.Spruce_Leaves.geometry} material={materials.spruce_leaves} />
      <mesh castShadow receiveShadow geometry={nodes.Birch_Leaves.geometry} material={materials.birch_leaves} />
      <mesh castShadow receiveShadow geometry={nodes.Grass.geometry} material={materials.grass} />
      <mesh castShadow receiveShadow geometry={nodes.Stone_Button.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Andesite_Wall.geometry} material={materials.andesite} />
      <mesh castShadow receiveShadow geometry={nodes.Acacia_Wood.geometry} material={materials.acacia_log} />
      <mesh castShadow receiveShadow geometry={nodes.Sunflower.geometry} material={materials.sunflower_top} />
      <mesh castShadow receiveShadow geometry={nodes.Smooth_Sandstone_Slab.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Smooth_Sandstone_Slab_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Mossy_Cobblestone_Slab.geometry} material={materials.mossy_cobblestone} />
      <mesh castShadow receiveShadow geometry={nodes.Bone_Block.geometry} material={materials.bone_block_side} />
      <mesh castShadow receiveShadow geometry={nodes.Stripped_Birch_Log.geometry} material={materials.stripped_birch_log} />
      <mesh castShadow receiveShadow geometry={nodes.Sea_Pickle.geometry} material={materials.sea_pickle} />
      <mesh castShadow receiveShadow geometry={nodes.Sea_Pickle__1.geometry} material={materials.sea_pickle} />
      <mesh castShadow receiveShadow geometry={nodes.Sea_Pickle__2.geometry} material={materials.sea_pickle} />
      <mesh castShadow receiveShadow geometry={nodes.Sea_Pickle__3.geometry} material={materials.sea_pickle} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_1.geometry} material={materials.grass_block_top} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_2.geometry} material={materials.grass_block_side} />
      <mesh castShadow receiveShadow geometry={nodes.Double_Tallgrass_1.geometry} material={materials.sunflower_back} />
      <mesh castShadow receiveShadow geometry={nodes.Double_Tallgrass_2.geometry} material={materials.sunflower_front} />
    </group>
  )
}

useGLTF.preload('/chunk75-50-lvl-1-transformed.glb')
