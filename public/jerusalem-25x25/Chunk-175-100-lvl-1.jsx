/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./maps/chunk-175-100-lvl-1.glb --transform --resolution --shadows -o ./maps/chunk-175-100-lvl-1-transformed.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/chunk-175-100-lvl-1-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Stone.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Granite.geometry} material={materials.granite} />
      <mesh castShadow receiveShadow geometry={nodes.Dirt.geometry} material={materials.dirt} />
      <mesh castShadow receiveShadow geometry={nodes.Oak_Log.geometry} material={materials.oak_log} />
      <mesh castShadow receiveShadow geometry={nodes.Birch_Log.geometry} material={materials.birch_log} />
      <mesh castShadow receiveShadow geometry={nodes.Grass.geometry} material={materials.grass} />
      <mesh castShadow receiveShadow geometry={nodes.Fern.geometry} material={materials.fern} />
      <mesh castShadow receiveShadow geometry={nodes.Dandelion.geometry} material={materials.dandelion} />
      <mesh castShadow receiveShadow geometry={nodes.Poppy.geometry} material={materials.poppy} />
      <mesh castShadow receiveShadow geometry={nodes.Azure_Bluet.geometry} material={materials.azure_bluet} />
      <mesh castShadow receiveShadow geometry={nodes.Oxeye_Daisy.geometry} material={materials.oxeye_daisy} />
      <mesh castShadow receiveShadow geometry={nodes.Cornflower.geometry} material={materials.cornflower} />
      <mesh castShadow receiveShadow geometry={nodes.End_Stone_Bricks.geometry} material={materials.end_stone_bricks} />
      <mesh castShadow receiveShadow geometry={nodes.Lantern.geometry} material={materials.lantern} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_1.geometry} material={materials.grass_block_top} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_2.geometry} material={materials.grass_block_side} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_2.geometry} material={materials.sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_2.geometry} material={materials.cut_sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_Stairs_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_Stairs_2.geometry} material={materials.sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Double_Tallgrass_1.geometry} material={materials.tall_grass_bottom} />
      <mesh castShadow receiveShadow geometry={nodes.Double_Tallgrass_2.geometry} material={materials.tall_grass_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_2.geometry} material={materials.cut_sandstone} />
    </group>
  )
}

useGLTF.preload('/chunk-175-100-lvl-1-transformed.glb')
