/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./maps/chunk0-500-lvl-1.glb --transform --resolution --shadows -o ./maps/chunk0-500-lvl-1.glb-transformed.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/chunk0-500-lvl-1-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Stone.geometry} material={materials.stone} />
      <mesh castShadow receiveShadow geometry={nodes.Granite.geometry} material={materials.granite} />
      <mesh castShadow receiveShadow geometry={nodes.Diorite.geometry} material={materials.diorite} />
      <mesh castShadow receiveShadow geometry={nodes.Andesite.geometry} material={materials.andesite} />
      <mesh castShadow receiveShadow geometry={nodes.Polished_Andesite.geometry} material={materials.polished_andesite} />
      <mesh castShadow receiveShadow geometry={nodes.Dirt.geometry} material={materials.dirt} />
      <mesh castShadow receiveShadow geometry={nodes.Sand.geometry} material={materials.sand} />
      <mesh castShadow receiveShadow geometry={nodes.Coal_Ore.geometry} material={materials.coal_ore} />
      <mesh castShadow receiveShadow geometry={nodes.Grass.geometry} material={materials.grass} />
      <mesh castShadow receiveShadow geometry={nodes.Torch.geometry} material={materials.torch} />
      <mesh castShadow receiveShadow geometry={nodes.Fence.geometry} material={materials.oak_planks} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_1.geometry} material={materials.grass_block_top} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_2.geometry} material={materials.grass_block_side} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_3.geometry} material={materials.snow} />
      <mesh castShadow receiveShadow geometry={nodes.Grass_Block_4.geometry} material={materials.grass_block_snow} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_2.geometry} material={materials.sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_2.geometry} material={materials.cut_sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Quartz_Slab_1.geometry} material={materials.quartz_block_bottom} />
      <mesh castShadow receiveShadow geometry={nodes.Quartz_Slab_2.geometry} material={materials.quartz_block_side} />
      <mesh castShadow receiveShadow geometry={nodes.Quartz_Slab_3.geometry} material={materials.quartz_block_side} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_Stairs_1.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Sandstone_Stairs_2.geometry} material={materials.sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_2.geometry} material={materials.sandstone_top} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_3.geometry} material={materials.cut_sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_1_1.geometry} material={materials.cut_sandstone} />
      <mesh castShadow receiveShadow geometry={nodes.Cut_Sandstone_Slab_1_2.geometry} material={materials.sandstone_top} />
    </group>
  )
}

useGLTF.preload('/chunk0-500-lvl-1-transformed.glb')
