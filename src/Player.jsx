/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState, Suspense } from 'react'
import { useGLTF, useAnimations, Billboard, Text, PositionalAudio, Html } from '@react-three/drei'

export default function Player(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/man.gltf')
  const { actions } = useAnimations(animations, group)
  const [currentAnimation, setCurrentAnimation] = useState('Idle 01')
  const [playerStats, setPlayerStats] = useState(null)

  useEffect(() => {
    actions[currentAnimation]?.play()

    setTimeout(() => {
      setPlayerStats({
        name: 'tommy.eth',
        health: 100,
        stamina: 100,
        mana: 100,
      })
    }, 100)

    /* check animation prop and update */
    if (props.animation !== currentAnimation) {
      actions[props.animation]?.reset().play().crossFadeFrom(actions[currentAnimation], 0.1)
      setCurrentAnimation(props.animation)
    }
  }, [actions, props.animation])

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI, 0, -Math.PI]}>
        <group name='Root-Global' rotation={[-Math.PI, 0, -Math.PI]} scale={[-1, 1, 1]}>
          <group name='Root-Local' />
          <group name='Controller-Global' position={[0, 17, 0]}>
            <group name='Controller-Local' />
            <group name='Hip-Global' position={[0, 1, 0]}>
              <group name='Belly-Global'>
                <group name='Belly-Local' />
                <group name='Chest-Global' rotation={[-0.06, 0, 0]}>
                  <group name='Head-Global' position={[0, 9, -0.5]} rotation={[0.08, 0, 0]}>
                    <mesh
                      name='Head-Local'
                      receiveShadow
                      geometry={nodes['Head-Local'].geometry}
                      material={materials['Head-Material']}
                      position={[0, 9, 0]}></mesh>
                  </group>
                  <group name='Left_Arm-Global' position={[-5, 7, -0.5]} rotation={[0.18, -0.07, 1.2]}>
                    <group name='Left_Forearm-Global' position={[-5, 0, 0]} rotation={[0, 0.44, 0]}>
                      <group name='Left_Hand-Global' position={[-5, 0, 0]} rotation={[-Math.PI / 2, -0.28, 0]}>
                        <mesh
                          name='Left_Hand-Local'
                          castShadow
                          receiveShadow
                          geometry={nodes['Left_Hand-Local'].geometry}
                          material={materials['LeftHand-Material']}
                          position={[-2, -0.5, -0.5]}
                        />
                      </group>
                      <mesh
                        name='Left_Forearm-Local'
                        castShadow
                        receiveShadow
                        geometry={nodes['Left_Forearm-Local'].geometry}
                        material={materials['L-Forearm-Material']}
                        position={[-2, 0, 0]}
                      />
                    </group>
                    <mesh
                      name='Left_Arm-Local'
                      castShadow
                      receiveShadow
                      geometry={nodes['Left_Arm-Local'].geometry}
                      material={materials['L-Arm-Material']}
                      position={[-2, 0, 0]}
                    />
                  </group>
                  <group name='Right_Arm-Global' position={[5, 7, -0.5]} rotation={[0.19, 0.07, -1.23]}>
                    <group name='Right_Forearm-Global' position={[5, 0, 0]} rotation={[0.1, -0.43, 0.04]}>
                      <group name='Right_Hand-Global' position={[5, 0, 0]} rotation={[-Math.PI / 2, 0.25, 0]}>
                        <mesh
                          name='Right_Hand-Local'
                          castShadow
                          receiveShadow
                          geometry={nodes['Right_Hand-Local'].geometry}
                          material={materials['RightHand-Material']}
                          position={[2, -0.5, -0.5]}
                        />
                      </group>
                      <mesh
                        name='Right_Forearm-Local'
                        castShadow
                        receiveShadow
                        geometry={nodes['Right_Forearm-Local'].geometry}
                        material={materials['R-Forearm-Material']}
                        position={[2, 0, 0]}
                      />
                    </group>
                    <mesh
                      name='Right_Arm-Local'
                      castShadow
                      receiveShadow
                      geometry={nodes['Right_Arm-Local'].geometry}
                      material={materials['R-Arm-Material']}
                      position={[2, 0, 0]}
                    />
                  </group>
                  <mesh
                    name='Chest-Local'
                    castShadow
                    receiveShadow
                    geometry={nodes['Chest-Local'].geometry}
                    material={materials['Chest-Material']}
                    position={[0, 4.5, 0]}
                  />
                </group>
              </group>
              <group name='Right_Thigh-Global' position={[3.5, -2.97, 0.5]} rotation={[0, 0.16, 0]}>
                <group name='Right_Leg-Global' position={[0, -7, -1]} rotation={[0.07, 0, 0]}>
                  <group name='Right_Foot-Global' position={[0, -6, 0]} rotation={[-0.07, 0, 0]}>
                    <mesh
                      name='Right_Foot-Local'
                      castShadow
                      receiveShadow
                      geometry={nodes['Right_Foot-Local'].geometry}
                      material={materials['R-Foot-Material']}
                      position={[0, -1, 1.5]}>
                      {currentAnimation == 'Run 01' && props.playSounds && (
                        <PositionalAudio autoplay loop url='/running.mp3' distance={0.3} />
                      )}
                    </mesh>
                  </group>
                  <mesh
                    name='Right_Leg-Local'
                    castShadow
                    receiveShadow
                    geometry={nodes['Right_Leg-Local'].geometry}
                    material={materials['R-Leg-Material']}
                    position={[0, -2.5, 0]}
                  />
                </group>
                <mesh
                  name='Right_Thigh-Local'
                  castShadow
                  receiveShadow
                  geometry={nodes['Right_Thigh-Local'].geometry}
                  material={materials['R-Thigh-Material']}
                  position={[-0.17, -3.5, 0]}
                />
              </group>
              <group name='Left_Thigh-Global' position={[-3.5, -3, 0.5]}>
                <group name='Left_Leg-Global' position={[0, -7, -1]}>
                  <group name='Left_Foot-Global' position={[0, -6, 0]}>
                    <mesh
                      name='Left_Foot-Local'
                      castShadow
                      receiveShadow
                      geometry={nodes['Left_Foot-Local'].geometry}
                      material={materials['L-Foot-Material']}
                      position={[0, -1, 1.5]}
                    />
                  </group>
                  <mesh
                    name='Left_Leg-Local'
                    castShadow
                    receiveShadow
                    geometry={nodes['Left_Leg-Local'].geometry}
                    material={materials['L-Leg-Material']}
                    position={[0, -2.5, 0]}
                  />
                </group>
                <mesh
                  name='Left_Thigh-Local'
                  castShadow
                  receiveShadow
                  geometry={nodes['Left_Thigh-Local'].geometry}
                  material={materials['L-Thigh-Material']}
                  position={[0.19, -3.5, 0]}
                />
              </group>
              <mesh
                name='Hip-Local'
                castShadow
                receiveShadow
                geometry={nodes['Hip-Local'].geometry}
                material={materials['Hip-Material']}
                position={[-0.5, -2.5, 0.5]}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/man.gltf')
